#!/bin/bash

# Script pour ex√©cuter tous les tests des modules principaux avec couverture
# Modules: aboutJson, auth, oauth2, services, users, zaps

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}================================================${NC}"
echo -e "${BLUE}  Ex√©cution des tests automatis√©s - Backend${NC}"
echo -e "${BLUE}================================================${NC}"
echo ""

# Fonction pour afficher un s√©parateur
separator() {
    echo ""
    echo -e "${YELLOW}------------------------------------------------${NC}"
    echo ""
}

# Variable pour compter les succ√®s et √©checs
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_MODULES=()

# Fonction pour ex√©cuter les tests d'un module
run_module_tests() {
    local module_name=$1
    local test_pattern=$2
    
    echo -e "${BLUE}üß™ Test du module: ${module_name}${NC}"
    echo ""
    
    # Sauvegarder la sortie compl√®te dans un fichier temporaire
    local temp_file="/tmp/test_${module_name}_$$.txt"
    
    if npm test -- --testPathPatterns="${test_pattern}" --coverage --verbose 2>&1 | tee "$temp_file"; then
        echo -e "${GREEN}‚úÖ ${module_name} - Tests r√©ussis${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
        rm -f "$temp_file"
    else
        echo -e "${RED}‚ùå ${module_name} - Tests √©chou√©s${NC}"
        FAILED_MODULES+=("$module_name")
        
        # Extraire et afficher les erreurs
        echo ""
        echo -e "${RED}D√©tails des erreurs pour ${module_name}:${NC}"
        grep -A 10 "FAIL\|‚óè" "$temp_file" | head -50 || true
        
        # Garder le fichier pour analyse ult√©rieure
        echo -e "${YELLOW}D√©tails complets sauvegard√©s dans: $temp_file${NC}"
    fi
    
    separator
}

# Ex√©cution des tests pour chaque module
echo -e "${YELLOW}D√©marrage des tests...${NC}"
separator

run_module_tests "AboutJson" "aboutJson"
run_module_tests "Auth" "auth"
run_module_tests "OAuth2" "oauth2"
run_module_tests "Services" "services"
run_module_tests "Users" "users"
run_module_tests "Webhooks" "webhooks"
run_module_tests "Zaps" "zaps"

TOTAL_TESTS=7

# R√©sum√© final
echo ""
echo -e "${BLUE}================================================${NC}"
echo -e "${BLUE}           R√âSUM√â DES TESTS${NC}"
echo -e "${BLUE}================================================${NC}"
echo ""
echo -e "Total de modules test√©s: ${TOTAL_TESTS}"
echo -e "${GREEN}Modules r√©ussis: ${PASSED_TESTS}${NC}"
echo -e "${RED}Modules √©chou√©s: $((TOTAL_TESTS - PASSED_TESTS))${NC}"

if [ ${#FAILED_MODULES[@]} -gt 0 ]; then
    echo ""
    echo -e "${RED}Modules avec des √©checs:${NC}"
    for module in "${FAILED_MODULES[@]}"; do
        echo -e "${RED}  - ${module}${NC}"
    done
    echo ""
    echo -e "${YELLOW}üí° Conseil: Consultez les fichiers /tmp/test_*.txt pour plus de d√©tails${NC}"
    echo ""
    echo -e "${BLUE}üìä G√©n√©ration du rapport de couverture global malgr√© les √©checs...${NC}"
    echo ""
    npm test -- --coverage --watchAll=false 2>&1 | grep -A 100 "Test Suites:" | head -60 || true
    exit 1
else
    echo ""
    echo -e "${GREEN}üéâ Tous les modules ont pass√© leurs tests!${NC}"
    echo ""
    
    # G√©n√©rer le rapport de couverture global
    echo -e "${BLUE}üìä G√©n√©ration du rapport de couverture global...${NC}"
    echo ""
    
    # Ex√©cuter tous les tests et capturer le r√©sultat dans un fichier temporaire
    TEMP_OUTPUT="/tmp/global_test_output_$$.txt"
    npm test -- --coverage --watchAll=false > "$TEMP_OUTPUT" 2>&1
    GLOBAL_EXIT_CODE=$?
    
    # Afficher le r√©sum√© des tests
    grep -A 3 "Test Suites:" "$TEMP_OUTPUT" || true
    echo ""
    
    # Afficher la couverture globale (ligne "All files")
    echo -e "${BLUE}Couverture globale:${NC}"
    grep "All files" "$TEMP_OUTPUT" || true
    echo ""
    
    # V√©rifier s'il y a des √©checs dans le rapport global
    if grep -q "FAIL" "$TEMP_OUTPUT" || [ $GLOBAL_EXIT_CODE -ne 0 ]; then
        echo -e "${RED}‚ö†Ô∏è  Attention: Des tests ont √©chou√© lors de l'ex√©cution globale!${NC}"
        echo ""
        echo -e "${YELLOW}D√©tails des tests √©chou√©s:${NC}"
        grep -B 5 -A 15 "FAIL\|‚óè.*‚úï" "$TEMP_OUTPUT" | head -100
        echo ""
        echo -e "${YELLOW}üí° Conseil: Un test peut passer individuellement mais √©chouer avec les autres${NC}"
        echo -e "${YELLOW}   (probl√®mes de mocks, √©tats partag√©s, etc.)${NC}"
        echo ""
        echo -e "${YELLOW}Rapport complet sauvegard√© dans: $TEMP_OUTPUT${NC}"
        exit 1
    fi
    
    # Nettoyer le fichier temporaire
    rm -f "$TEMP_OUTPUT"
    
    echo -e "${GREEN}‚úÖ Tous les tests sont pass√©s avec succ√®s!${NC}"
    exit 0
fi
