services:
  database:
    image: postgres:latest
    restart: always
    volumes:
      - area_database_volume:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - area_network
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - area_network
    depends_on:
      - database

  wait-for-db:
    image: postgres:latest
    depends_on:
      - database
    entrypoint: ["sh", "-c", "until pg_isready -h database -p 5432; do echo 'Waiting for database...'; sleep 2; done; echo 'Database is up.'"]
    networks:
      - area_network

  api:
    build: ./back_end
    ports:
      - "8080:3000"
    networks:
      - area_network
    env_file:
      - .env
    depends_on:
      - wait-for-db
    entrypoint: ["/app/entrypoint.sh"]
    develop:
      watch:
        - action: sync
          target: /app/src
          path: ./back_end/src
        - action: rebuild
          path: ./back_end/package.json
        - action: rebuild
          path: ./back_end/tsconfig.json
        - action: rebuild
          path: ./back_end/tsconfig.build.json

  nextjs:
    build: ./front_end/web/
    container_name: nextjs
    ports:
      - "3001:3000"
    networks:
      - area_network
    depends_on:
      - api

  wait-for-nextjs:
    image: busybox
    depends_on:
      - nextjs
    entrypoint: ["sh", "-c", "until nc -z nextjs 3000; do echo 'Waiting for nextjs...'; sleep 2; done; echo 'Nextjs is up.'"]
    networks:
      - area_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./front_end/area/nginx.conf:/etc/nginx/nginx.conf:ro
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - wait-for-nextjs
    networks:
      - area_network

  backend-test:
    build: ./back_end
    networks:
      - area_network
    env_file:
      - .env
    depends_on:
      - wait-for-db
    entrypoint: ["pnpm", "test:e2e"]

  # client_mobile:
  #   build: ./front_end/React-Native/AREA/
  #   networks:
  #     - area_network
  #   depends_on:
  #     - api


networks:
  area_network:

volumes:
  area_database_volume:
